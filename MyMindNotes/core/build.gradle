plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.dagger.hilt.android'
}

apply from: '../modules.gradle'


android {
    namespace 'com.android.mymindnotes.core'
    compileSdk 33

    defaultConfig {
        minSdk 24
        targetSdk 33

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro' //  Java 어플리케이션의 코드 최적화 및 난독화 도구. 라이브러리 모듈의 경우, 그 모듈을 사용하는 앱이 ProGuard를 적용할 때 문제가 발생하지 않도록 하기 위해 consumerProguardFiles 설정을 사용하여 필요한 ProGuard 규칙을 제공
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17.toString()
    }

}

dependencies {
    // Retrofit 설치
    implementation "com.squareup.retrofit2:retrofit:${retrofitVersion}"
    // Gson converter
    implementation "com.squareup.retrofit2:converter-gson:${converterGsonVersion}"
    // okhttp3 설치
    implementation "com.squareup.okhttp3:okhttp:${okhttpVersion}"
    // logging-interceptor 설치
    implementation "com.squareup.okhttp3:logging-interceptor:${loggingInterceptorVersion}"

    // Hilt
    implementation "com.google.dagger:hilt-android:${hiltAndroidVersion}"
    kapt "com.google.dagger:hilt-compiler:${hiltCompilerVersion}"

    implementation "androidx.core:core-ktx:${coreKtxVersion}"
    implementation "androidx.appcompat:appcompat:${appCompatVersion}"
    implementation "com.google.android.material:material:${materialVersion}"
}